model:
  num_classes: 10  # Number of output classes (adjust based on your dataset)
  input_channels: 3  # RGB images have 3 channels (change if grayscale images)
  
  # Convolutional layers configurations
  conv_layers:
    - filters: 32
      kernel_size: 3
      pool_size: 2  # Pooling size
    - filters: 64
      kernel_size: 3
      pool_size: 2
    - filters: 128
      kernel_size: 3
      pool_size: 2

  # Fully connected layers
  fc_layers:
    - units: 512  # Units in the first fully connected layer
  
  # Optional: You can also add other parameters such as dropout, batch normalization, etc.
  dropout: 0.5
  batch_norm: true

Config:
  train_dir: "train/"
  test_dir: "test/"
  train_csv: "Training_csv/train.csv"  # Assuming CSV has 'image' and 'class' columns
  test_csv: "Testing_csv/test.csv"
    
  # Model
  img_size: 50
  num_classes: 75
  
  # Training
  batch_size: 32
  epochs: 10
  lr: 0.001
  device: torch.device("cuda" if torch.cuda.is_available() else "cpu")